{"version":3,"sources":["components/layout/Navbar.js","components/drinks/DrinkItem.js","components/drinks/Drinks.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","icon","title","className","defaultProps","DrinkItem","props","drink","BrandName","ProductImage","BrandLogoURL","src","alt","style","width","href","Drinks","userStyle","this","drinks","map","DSDLinkMasterProductID","localdrinks","localdrink","id","Component","display","gridTemplateColumns","gridGap","App","state","loading","BrandCategory1","BrandCategory2","BrandCategory3","callBackendAPI","a","fetch","response","json","body","status","Error","message","setState","axios","get","res","Export","Report","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAGMA,EAAS,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACtB,OACC,qBAAKC,UAAU,oBAAf,SACA,+BACC,mBAAGA,UAAWF,IACbC,QAMJF,EAAOI,aAAe,CACrBF,MAAO,SACPD,KAAM,wBASQD,QCkBAK,EAtCG,SAAAC,GAAU,IAAD,EACsBA,EAAMC,MAA/CC,EADmB,EACnBA,UAAWC,EADQ,EACRA,aAAcC,EADN,EACMA,aAChC,OAAoB,MAAhBD,EAEF,sBAAKN,UAAU,mBAAf,UACA,qBAAKQ,IAAKD,EAAcE,IAAI,GAAIC,MAAO,CAACC,MAAO,WAC/C,6BAAKN,IAEL,8BACC,mBAAGO,KAAK,IAAIZ,UAAU,2BAAtB,yBASD,sBAAKA,UAAU,mBAAf,UACA,qBAAKQ,IAAKF,EAAcG,IAAI,GAAIC,MAAO,CAACC,MAAO,WAC/C,6BAAKN,IAEL,8BACC,mBAAGO,KAAK,IAAIZ,UAAU,2BAAtB,0BCzBSa,EAAb,uKAsBE,OACC,sBAAKH,MAAOI,EAAZ,UACEC,KAAKZ,MAAMa,OAAOC,KAAI,SAAAb,GAAK,OAC1B,cAAC,EAAD,CAA8CA,MAAOA,GAArCA,EAAMc,2BAEtBH,KAAKZ,MAAMgB,YAAYF,KAAI,SAAAG,GAAU,OACpC,cAAC,EAAD,CAA+BhB,MAAOgB,GAAtBA,EAAWC,cA5BlC,GAA4BC,aAqCtBR,EAAY,CACjBS,QAAS,OACTC,oBAAqB,gBACrBC,QAAS,QAGKZ,I,iBCkCAa,G,kNAzEbC,MAAQ,CACNX,OAAQ,GACRY,SAAS,EACVT,YAAa,CACZ,CACCE,GAAI,IACJhB,UAAW,0BACXC,aAAc,iGACXuB,eAAe,UACfC,eAAe,SACfC,eAAe,kBAEnB,CACCV,GAAI,IACJhB,UAAW,iBACXC,aAAc,iGACXuB,eAAe,UACfC,eAAe,gBACfC,eAAe,IAEnB,CACCV,GAAI,IACJhB,UAAW,2CACXC,aAAc,iGACXuB,eAAe,UACfC,eAAe,UACfC,eAAe,M,EAwBrBC,e,sBAAiB,8BAAAC,EAAA,sEACQC,MAAM,8GADd,cACTC,EADS,gBAEIA,EAASC,OAFb,UAETC,EAFS,OAIS,MAApBF,EAASG,OAJE,sBAKPC,MAAMF,EAAKG,SALJ,gCAORH,GAPQ,2C,yLAjBftB,KAAK0B,SAAS,CAACb,SAAS,I,SAWNc,IAAMC,IAAI,iI,OAAtBC,E,OACN7B,KAAK0B,SAAS,CAAEzB,OAAQ4B,EAAIC,OAAOC,OAAOC,IAAKnB,SAAS,I,qIAgBxD,OACI,sBAAK5B,UAAU,MAAf,UACA,cAAC,EAAD,IAEE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAQ4B,QAASb,KAAKY,MAAMC,QAASZ,OAAQD,KAAKY,MAAMX,OAAQG,YAAaJ,KAAKY,MAAMR,uB,GAnElFG,cCMH0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.62540f21.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navbar = ({icon, title}) => {\r\n\treturn (\r\n\t\t<nav className='navbar bg-primary'>\r\n\t\t<h1>\r\n\t\t\t<i className={icon}/>\r\n\t\t\t{title}\r\n\t\t</h1>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nNavbar.defaultProps = {\r\n\ttitle: 'URNeat',\r\n\ticon: 'fas fa-glass-whiskey'\r\n};\r\n\r\nNavbar.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\ticon: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Drink Item is a functional component\r\n// which means no more render() or 'this' keyword\r\nconst DrinkItem = props => {\r\n\tconst {BrandName, ProductImage, BrandLogoURL} = props.drink;\r\n\tif (ProductImage == null) {\r\n\t\treturn (\r\n\t\t\t<div className='card text-center'>\r\n\t\t\t<img src={BrandLogoURL} alt=\"\"  style={{width: '200px'}} />\r\n\t\t\t<h3>{BrandName}</h3>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<a href=\"#\" className='btn btn-dark btn-sm my-1'>\r\n\t\t\t\t\tReview\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className='card text-center'>\r\n\t\t\t<img src={ProductImage} alt=\"\"  style={{width: '200px'}} />\r\n\t\t\t<h3>{BrandName}</h3>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<a href=\"#\" className='btn btn-dark btn-sm my-1'>\r\n\t\t\t\t\tReview\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nDrinkItem.propTypes = {\r\n\tdrink: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default DrinkItem;\r\n","import React, { Component } from 'react';\r\nimport DrinkItem from './DrinkItem';\r\n\r\nexport class Drinks extends Component {\r\n\t// state = {\r\n\t// \tdrinks: [\r\n\t// \t\t{\r\n\t// \t\t\tid: '1',\r\n\t// \t\t\tbrandname: 'The Balvenie Doublewood',\r\n\t// \t\t\tproductImage: 'https://www.totalwine.com/dynamic/x490,sq/media/sys_master/twmmedia/hf8/h65/12291773431838.png'\r\n\t// \t\t},\r\n\t// \t\t{\r\n\t// \t\t\tid: '2',\r\n\t// \t\t\tbrandname: 'The Green Spot',\r\n\t// \t\t\tproductImage: 'https://www.totalwine.com/dynamic/x490,sq/media/sys_master/twmmedia/he8/h26/12244707213342.png'\r\n\t// \t\t},\r\n\t// \t\t{\r\n\t// \t\t\tid: '3',\r\n\t// \t\t\tbrandname: 'Basil Hayden\\'s Kentucky Straight Bourbon',\r\n\t// \t\t\tproductImage: 'https://www.totalwine.com/dynamic/x490,sq/media/sys_master/twmmedia/hf4/hb9/12140740247582.png'\r\n\t// \t\t}\r\n\t// \t]\r\n\t// }\r\n\trender() {\r\n\t\t//loops through the states above called drinks\r\n\t\treturn (\r\n\t\t\t<div style={userStyle}>\r\n\t\t\t\t{this.props.drinks.map(drink => (\r\n\t\t\t\t\t\t<DrinkItem key={drink.DSDLinkMasterProductID} drink={drink}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{this.props.localdrinks.map(localdrink => (\r\n\t\t\t\t\t\t\t<DrinkItem key={localdrink.id} drink={localdrink}/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// css for grid styles\r\nconst userStyle = {\r\n\tdisplay: 'grid',\r\n\tgridTemplateColumns: 'repeat(3,1fr)',\r\n\tgridGap: '1rem'\r\n}\r\n\r\nexport default Drinks;\r\n","import React, { Component } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Drinks from './components/drinks/Drinks';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    drinks: [],\n    loading: false,\n  \tlocaldrinks: [\n  \t\t{\n  \t\t\tid: '1',\n  \t\t\tBrandName: 'The Balvenie Doublewood',\n  \t\t\tProductImage: 'https://www.totalwine.com/dynamic/x490,sq/media/sys_master/twmmedia/hf8/h65/12291773431838.png',\n        BrandCategory1:'Whiskey',\n        BrandCategory2:'Scotch',\n        BrandCategory3:'Scotch Whiskey'\n  \t\t},\n  \t\t{\n  \t\t\tid: '2',\n  \t\t\tBrandName: 'The Green Spot',\n  \t\t\tProductImage: 'https://www.totalwine.com/dynamic/x490,sq/media/sys_master/twmmedia/he8/h26/12244707213342.png',\n        BrandCategory1:'Whiskey',\n        BrandCategory2:'Irish Whiskey',\n        BrandCategory3:''\n  \t\t},\n  \t\t{\n  \t\t\tid: '3',\n  \t\t\tBrandName: 'Basil Hayden\\'s Kentucky Straight Bourbon',\n  \t\t\tProductImage: 'https://www.totalwine.com/dynamic/x490,sq/media/sys_master/twmmedia/hf4/hb9/12140740247582.png',\n        BrandCategory1:'Whiskey',\n        BrandCategory2:'Bourbon',\n        BrandCategory3:''\n  \t\t}\n  \t]\n  };\n\n\n  async componentDidMount() {\n    this.setState({loading: true});\n\n    // this.callBackendAPI()\n    //   .then(res => this.setState({ data: res.express }))\n    //   .catch(err => console.log(err));\n\n    // // const res = await this.callBackendAPI();\n\n    // console.log(res.Export.Report.Row);\n    // // this.setState({ drinks: res.Export.Report.Row, loading: false})\n\n    const res = await axios.get('https://dsdlink.com/ECP_20.12_A/aspx1/API?APICommand=JasmineAnica_ProductMasterData&APIToken=fc8cc7c6e4c43d759d6ff387a62f5643')\n    this.setState({ drinks: res.Export.Report.Row, loading: false})\n\n  }\n\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/ECP_20.12_A/aspx1/API?APICommand=JasmineAnica_ProductMasterData&APIToken=fc8cc7c6e4c43d759d6ff387a62f5643');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  render() {\n    return (\n        <div className='App'>\n        <Navbar />\n\n          <div className='container'>\n            <Drinks loading={this.state.loading} drinks={this.state.drinks} localdrinks={this.state.localdrinks}/>\n          </div>\n\n        </div>\n      );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}